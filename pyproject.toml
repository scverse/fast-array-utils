[build-system]
build-backend = "hatchling.build"
requires = [ "hatch-docstring-description", "hatch-vcs", "hatchling" ]

[project]
name = "fast-array-utils"
readme = "README.rst"
license = "MPL-2.0"
authors = [
  { name = "Philipp A.", email = "flying-sheep@web.de" },
]
requires-python = ">=3.11"
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: R",
  "Topic :: Scientific/Engineering :: Bio-Informatics",
]
dynamic = [ "description", "version" ]
dependencies = [ "numba", "numpy" ]
optional-dependencies.doc = [
  "furo",
  "pytest",
  "scanpydoc>=0.15.2",
  "sphinx>=8",
  "sphinx-autodoc-typehints",
  "sphinx-autofixture",
]
optional-dependencies.full = [ "dask", "fast-array-utils[sparse]", "h5py", "zarr" ]
optional-dependencies.sparse = [ "scipy>=1.8" ]
optional-dependencies.test = [ "coverage[toml]", "pytest", "pytest-codspeed" ]
urls.'Documentation' = "https://icb-fast-array-utils.readthedocs-hosted.com/"
urls.'Issue Tracker' = "https://github.com/scverse/fast-array-utils/issues"
urls.'Source Code' = "https://github.com/scverse/fast-array-utils"

entry_points.pytest11.fast_array_utils = "testing.fast_array_utils.pytest"

[tool.hatch.version]
source = "vcs"
raw-options = { local_scheme = "no-local-version" } # be able to publish dev version

# TODO: support setting main package in the plugin
# [tool.hatch.metadata.hooks.docstring-description]

[tool.hatch.build.targets.wheel]
packages = [ "src/testing", "src/fast_array_utils" ]

[tool.hatch.envs.default]
installer = "uv"

[tool.hatch.envs.docs]
features = [ "doc" ]
scripts.build = "sphinx-build -M html docs docs/_build"
scripts.clean = "git clean -fdX docs"

[tool.hatch.envs.hatch-test]
features = [ "test" ]
extra-dependencies = [ "ipykernel", "ipycytoscape" ]
env-vars.CODSPEED_PROFILE_FOLDER = "test-data/codspeed"
overrides.matrix.extras.features = [
  { if = [ "full" ], value = "full" },
]

[[tool.hatch.envs.hatch-test.matrix]]
python = [ "3.13", "3.12", "3.11" ]
extras = [ "full", "min" ]

[tool.ruff]
line-length = 100
namespace-packages = [ "src/testing" ]
lint.select = [ "ALL" ]
lint.ignore = [
  "A005",    # submodules never shadow builtins.
  "C408",    # dict() calls are nice
  "COM812",  # trailing commas handled by black
  "D203",    # prefer 0 to 1 blank line before class members
  "D213",    # prefer docstring summary on first line
  "FIX002",  # “TODO” comments
  "N812",    # lowercase imports are fine
  "PLR0913", # having many (kw)args is fine
  "Q",       # handled by formatter
  "S101",    # asserts are fine
  "TID252",  # relative imports are fine
]
lint.per-file-ignores."docs/**/*.py" = [ "INP001" ] # No __init__.py in docs
lint.per-file-ignores."src/**/stats/*.py" = [ "A001", "A004" ] # Shadows builtins like `sum`
lint.per-file-ignores."src/fast_array_utils/types.py" = [ "N806" ] # We have variables that are classes here
lint.per-file-ignores."stubs/**/*.pyi" = [ "F403", "F405", "N801" ] # Stubs don’t follow name conventions
lint.per-file-ignores."tests/**/test_*.py" = [
  "D100",    # tests need no module docstrings
  "D103",    # tests need no function docstrings
  "INP001",  # tests should not have __init__.py
  "PLR2004", # tests use magic values
  "S101",    # tests use `assert`
]
lint.allowed-confusables = [ "×", "’" ]
lint.flake8-bugbear.extend-immutable-calls = [ "testing.fast_array_utils.Flags" ]

lint.flake8-copyright.notice-rgx = "SPDX-License-Identifier: MPL-2\\.0"
lint.flake8-type-checking.exempt-modules = [  ]
lint.flake8-type-checking.strict = true
lint.isort.known-first-party = [ "fast_array_utils" ]
lint.isort.lines-after-imports = 2
lint.isort.required-imports = [ "from __future__ import annotations" ]
lint.pydocstyle.convention = "numpy"

[tool.pytest.ini_options]
addopts = [
  "--import-mode=importlib",
  "--strict-markers",
  "--doctest-modules",
  "--pyargs",
  "-ptesting.fast_array_utils.pytest",
]
testpaths = [ "./tests", "fast_array_utils" ]
filterwarnings = [
  "error",
  # codspeed seems to break this dtype added by h5py
  "ignore:.*numpy[.]longdouble:UserWarning",
]
markers = [
  "benchmark: marks tests as benchmark (to run with `--codspeed`)",
]
xfail_strict = true

[tool.coverage]
run.data_file = "test-data/.coverage"
xml.output = "test-data/coverage.xml"
html.directory = "test-data/htmlcov"
run.omit = [ "src/testing/*", "tests/*" ]
report.exclude_also = [ "if TYPE_CHECKING:", "@numba[.]njit", "[.]{3}" ]

[tool.mypy]
strict = true
explicit_package_bases = true
mypy_path = [ "$MYPY_CONFIG_FILE_DIR/stubs", "$MYPY_CONFIG_FILE_DIR/src" ]

[tool.pyright]
stubPath = "./stubs"
reportPrivateUsage = false
